@model List<ProjectModels.CartItem>;

@{
    ViewBag.Title = "Cart";
    var cartSubTotal = ViewData["CartSubTotal"] as int? ?? 0;
    int shipping = cartSubTotal * 5 / 100;
}

@section styles {
    <link href="~/shop/css/style.css" rel="stylesheet">
}

<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <div class="col-lg-8 table-responsive mb-5">
            <table class="table table-bordered text-center mb-0">
                <thead class="bg-secondary text-dark">
                    <tr>
                        <th>Products</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Remove 
                            @if (Context.Session.GetString("MiamiShopCart") != null)
                            {
                                <button class="btn btn-sm btn-primary delete-all-cart-btn"><i class="fa fa-times"></i></button>
                            }
                        </th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    @if (Model != null)
                    {
                        @foreach (var item in Model)
                        {
                            <tr id="row_@item.Product.Id">
                                <td class="align-middle"><img src="img/product-1.jpg" alt="" style="width: 50px;">@item.Product.Name</td>
                                <td class="align-middle">@(Int32.Parse(item.Product.SellingPrice).ToString("C"))</td>
                                <td class="align-middle">
                                    <div class="input-group quantity mx-auto" style="width: 100px;">
                                        <form asp-action="ChangeQuantity" asp-controller="Cart">
                                            <div class="input-group-btn">
                                                <input type="submit" class="btn btn-sm btn-primary btn-minus" name="minus" value="-">
                                            </div>
                                            <input type="hidden" name="pid" value="@item.Product.Id">
                                            <input type="text" name="qty" class="form-control form-control-sm bg-secondary text-center" value="@item.Qty">
                                            <div class="input-group-btn">
                                                <input type="submit" class="btn btn-sm btn-primary btn-plus" name="plus" value="+">
                                            </div>
                                        </form>
                                    </div>
                                </td>
                                <td class="align-middle" id="subtotal_@item.Product.Id">
                                    @((Int32.Parse(item.Product.SellingPrice) * item.Qty).ToString("C"))
                                </td>
                                <td class="align-middle"><button class="btn btn-sm btn-primary delete-cart-btn" data-pid="@item.Product.Id"><i class="fa fa-times"></i></button></td>
                            </tr>

                        }
                    }
                    else
                    {
                        <tr>
                            <td class="text-center" colspan="5">Cart is empty.</td>
                        </tr>
                    }

                   
                </tbody>
            </table>
        </div>
        <div class="col-lg-4">
            <!--<form class="mb-5" action="">
                <div class="input-group">
                    <input type="text" class="form-control p-4" placeholder="Coupon Code">
                    <div class="input-group-append">
                        <button class="btn btn-primary">Apply Coupon</button>
                    </div>
                </div>
            </form>-->
            <div class="card border-secondary mb-5">
                <div class="card-header bg-secondary border-0">
                    <h4 class="font-weight-semi-bold m-0">Cart Summary</h4>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3 pt-1">
                        <h6 class="font-weight-medium">Subtotal</h6>
                        <h6 id="cart-subtotal" class="font-weight-medium">@cartSubTotal.ToString("C")</h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Shipping(5%)</h6>
                        <h6 id="cart-shipping" class="font-weight-medium">@shipping.ToString("C")</h6>
                    </div>
                </div>
                <div class="card-footer border-secondary bg-transparent">
                    <div class="d-flex justify-content-between mt-2">
                        <h5 class="font-weight-bold">Total</h5>
                        <h5 id="cart-total" class="font-weight-bold">@((cartSubTotal + shipping).ToString("C"))</h5>
                    </div>
                    <a asp-action="Checkout" asp-controller="Cart" class="btn btn-block btn-primary my-3 py-3">Proceed To Checkout</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/shop/lib/easing/easing.min.js"></script>
    <script src="~/shop/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="~/shop/js/main.js"></script>

    <script>
        $(document).ready(function () {

            const qtyIcon = $("header nav ul.site-menu li a span#cart-icon-quantity-layout").get(0);

            $(".btn-minus, .btn-plus").click(function (event) {
                event.preventDefault();

                var form = $(this).closest("form");
                var qtyInput = form.find("input[name='qty']");
                var pid = form.find("input[name='pid']").val();
                var currentQty = parseInt(qtyInput.val());
                var newQty = currentQty;

                if ($(this).hasClass("btn-minus")) {
                    newQty = Math.max(1, currentQty - 1);
                } else {
                    newQty = currentQty + 1;
                }

                // Cập nhật giá trị số lượng trong input
                qtyInput.val(newQty);

                $.ajax({
                    type: "POST",
                    url: "/Cart/ChangeQuantity",
                    data: { pid: pid, qty: newQty },
                    success: function (response) {
                        if(response.error){
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.error,
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload(); // Load lại trang nếu người dùng bấm OK
                                }
                            });
                        } else {
                            $("#subtotal_" + pid).html(response.cartItemSubTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $(qtyIcon).html(response.cartQuantity);
                            $("#cart-subtotal").html(response.cartSubTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $("#cart-shipping").html((response.cartSubTotal * 5 / 100).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $("#cart-total").html((response.cartSubTotal + response.cartSubTotal * 5 / 100).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                        } 
                    },
                    error: function () {
                        console.log("Error occurred during AJAX request.");
                    }
                });
            });

            $("input[name='qty']").change(function () {
                var form = $(this).closest("form");
                var qtyInput = form.find("input[name='qty']");
                var pid = form.find("input[name='pid']").val();
                var newQty = parseInt(qtyInput.val());

                $.ajax({
                    type: "POST",
                    url: "/Cart/ChangeQuantity",
                    data: { pid: pid, qty: newQty },
                    success: function (response) {
                        if (response.error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.error,
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload(); // Load lại trang nếu người dùng bấm OK
                                }
                            });
                        } else {
                            $("#subtotal_" + pid).html(response.cartItemSubTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $(qtyIcon).html(response.cartQuantity);
                            $("#cart-subtotal").html(response.cartSubTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $("#cart-shipping").html((response.cartSubTotal * 5 / 100).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $("#cart-total").html((response.cartSubTotal + response.cartSubTotal * 5 / 100).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                        }
                    },
                    error: function () {
                        console.log("Error occurred during AJAX request.");
                    }
                });
            });

           

            $(document).ready(function () {
                $(".delete-all-cart-btn").click(function (event) {
                    event.preventDefault();

                    $.ajax({
                        type: "POST",
                        url: "/Cart/ClearCart",
                        success: function (response) {
                            if (response.error) {
                                // Xử lý lỗi nếu cần
                            } else {
                                const tbody = $("tbody.align-middle");
                                tbody.html('<tr><td class="text-center" colspan="5">Cart is empty.</td></tr>');
                                $(qtyIcon).html(0);
                                $("#cart-subtotal").html("$0.00");
                                $("#cart-shipping").html("$0.00");
                                $("#cart-total").html("$0.00");

                                Swal.fire({
                                    icon: 'success',
                                    title: 'Cart is empty!',
                                    text: 'Your cart has been successfully cleared.',
                                    confirmButtonText: 'OK',
                                });
                            }
                        },
                        error: function () {
                            console.log("Error occurred during AJAX request.");
                        }
                    });
                });
            });

            $('.delete-cart-btn').on('click', function (e) {
                e.preventDefault();

                var productId = $(this).data('pid');
                var url = '/Cart/RemoveFromCart';
                var data = { pid: productId };

                $.ajax({
                    type: 'POST',
                    url: url,
                    data: data,
                    success: function (response) {
                        if (response.error) {
                            // Xử lý lỗi nếu cần
                        } else {
                            $('#row_' + productId).remove();
                            $(qtyIcon).html(response.cartQuantity);
                            $("#cart-subtotal").html(response.cartSubTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $("#cart-shipping").html((response.cartSubTotal * 5 / 100).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            $("#cart-total").html((response.cartSubTotal + response.cartSubTotal * 5 / 100).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                            Swal.fire({
                                icon: 'success',
                                title: 'Product is removed!',
                                text: 'Your cart item has been successfully removed.',
                                confirmButtonText: 'OK',
                            });
                        }
                    },
                    error: function () {
                        console.log("Error occurred during AJAX request.");
                    }
                });
            });
        });

    </script>

}
